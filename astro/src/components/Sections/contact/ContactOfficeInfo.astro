---
// 1. Astro Component Imports (Existing)
import { Image } from "astro:assets";
import emailIcon from "/src/assets/images/email-icon-1.svg";
import phoneIcon from "/src/assets/images/phone-icon-1.svg";
import locationIcon from "/src/assets/images/location-icon-1.svg";
import clockIcon from "/src/assets/images/time-clock-1.svg";

// 2. Sanity Imports (Adjust path to your client file and generated types!)
import { sanityClient, type OfficeDetails } from "../../../lib/sanityClient";

// 3. Define the GROQ Query (Existing)
const officeDetailsQuery = `
  *[_type == "officeDetails"][0] {
    email,
    phone,
    streetAddress,
    cityPostal,
    additionalInfo,
    officeHours[] {
      days,
      time
    }
  }
`;

// 4. Fetch the Data (Existing)
const officeDetails: OfficeDetails | null =
  await sanityClient.fetch(officeDetailsQuery);

// Fallback data (Existing)
const fallback = {
  email: "office@yourdomain.at",
  phone: "+43 1 123 45 67",
  streetAddress: "Hauptstra√üe 10",
  cityPostal: "1140 Wien, √ñsterreich",
  additionalInfo: "Termin nach telefonischer Vereinbarung erbeten.",
  officeHours: [
    { days: "Montag - Donnerstag", time: "9:00 - 16:00" },
    { days: "Freitag", time: "9:00 - 12:00" },
  ],
};

// Use fetched data or fallback
const data = officeDetails || fallback;

//  Prepare address for Google Maps links/search
const rawAddress = `${data.streetAddress}, ${data.cityPostal}`;
const mapAddress = encodeURIComponent(rawAddress);

//  Generate the Google Maps URL for an external link
const googleMapsUrl = `https://www.google.com/maps/search/?api=1&query=${mapAddress}`;

// Helper function to clean phone number for 'tel:' link (Existing)
const cleanPhoneNumber = data.phone.replace(/[\s\-\(\)]/g, "");
---

<section id="contact-details-section" class="details-section">
  <div class="site-container padding-section">
    <div class="details-content-wrapper">
      <div class="map-embed-container">
        <iframe
          src={`https://maps.google.com/maps?q=${mapAddress}&output=embed`}
          title={`Google Maps location for ${rawAddress}`}
          style="border:0;"
          allowfullscreen=""
          loading="lazy"
          referrerpolicy="no-referrer-when-downgrade"></iframe>
      </div>
      <div class="details-card">
        <div class="details-header-wrapper">
          <h3 class="heading-h3">Hier sind wir zuhause.</h3>
          <div class="padding-bottom padding-small"></div>
          <p class="details-subheader">
            Unser B√ºro im Westen Wiens ‚Äì leicht zu finden und immer offen f√ºr
            ein pers√∂nliches Gespr√§ch rund um Ihre Immobilie.
          </p>
          <div class="padding-bottom padding-medium"></div>
        </div>

        <div class="contact-items-list">
          <div class="contact-item">
            <Image
              src={emailIcon}
              loading="lazy"
              alt="Email Icon"
              class="item-icon"
            />
            <div class="contact-item-text">
              <a href={`mailto:${data.email}`}>
                <p>{data.email}</p>
              </a>
            </div>
          </div>

          <div class="contact-item">
            <Image
              src={phoneIcon}
              loading="lazy"
              alt="Phone Icon"
              class="item-icon"
            />
            <div class="contact-item-text">
              <a href={`tel:${cleanPhoneNumber}`}>
                <p>{data.phone}</p>
              </a>
            </div>
          </div>

          <div class="contact-item">
            <Image
              src={locationIcon}
              loading="lazy"
              alt="Location Icon"
              class="item-icon"
            />
            <div class="contact-item-text">
              <a href={googleMapsUrl} target="_blank" rel="noopener noreferrer">
                <p>{data.streetAddress}</p>
                <p>{data.cityPostal}</p>
              </a>
            </div>
          </div>

          <div class="contact-item contact-item-hours">
            <Image
              src={clockIcon}
              loading="lazy"
              alt="Time Clock Icon"
              class="item-icon"
            />
            <div class="contact-item-text">
              {
                data.officeHours.map((hours) => (
                  <p>
                    {hours.days}: {hours.time}
                  </p>
                ))
              }

              {
                data.additionalInfo && (
                  <div class="notice-text">{data.additionalInfo}</div>
                )
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* --- Details Section: Main Container --- */
  .details-section {
    position: relative;
    padding: var(--spacing-4xl) 0;
    /* padding-top: calc(var(--spacing-4xl) + 15vw); */
    background-color: var(--color-brand-medium-green);
  }

  .details-section::before {
    content: "";
    position: absolute;
    top: -0rem;
    left: 0;
    width: 100%;
    height: 35rem; /* Adjust this to control the height of the diagonal */
    background-color: var(
      --color-brand-medium-green
    ); /* Color of the section BELOW it */
    transform: skewY(-11deg); /* Adjust this value for the angle */
    transform-origin: top left;
    z-index: 10; /* Ensures the bottom wedge is on top */
  }

  /* --- Two-Column Layout --- */
  .details-content-wrapper {
    position: relative;
    display: flex;
    flex-direction: column; /* Stack on mobile */
    gap: var(--spacing-2xl);
    z-index: 10;
  }

  @media (min-width: 992px) {
    .details-content-wrapper {
      flex-direction: row; /* Side-by-side on desktop */
      justify-content: space-between;
      align-items: stretch;
    }
  }

  /* --- Details Card (Text and Icons) --- */
  .details-card {
    flex: 1; /* Allows the card to grow */
    color: var(--color-neutral-white);
    /* padding: var(--spacing-3xl); */
    border-radius: var(--border-radius);
  }
  .details-header-wrapper {
    padding-bottom: var(--spacing-lg);
  }
  .heading-h3 {
    font-family: var(--font-primary);
    color: var(--color-brand-light-green);
    margin-bottom: var(--spacing-sm);
  }

  .details-subheader {
    font-size: var(--font-size-body-base);

    max-width: 40ch;
  }

  /* --- Contact Items List --- */
  .contact-items-list {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
  }

  .contact-item {
    display: flex;
    align-items: flex-start; /* Icons align to the top of the text */
    gap: var(--spacing-md);
  }

  .item-icon {
    width: 24px;
    height: 24px;
    flex-shrink: 0; /* Prevents icon from shrinking */
    object-fit: contain;
  }

  .contact-item-text p {
    margin: 0;
    line-height: 1.4;
    font-size: var(--font-size-body);
  }

  .contact-item-text p:first-child {
    font-weight: var(--font-weight-medium);
  }

  /* üü¢ NEW: Ensure the linked text is visible */
  .contact-item-text a {
    color: inherit; /* Inherit white text color */
    text-decoration: none; /* Remove underline, or add a subtle one */
  }
  .contact-item-text a:hover {
    text-decoration: underline;
  }

  .notice-text {
    padding-top: var(--spacing-sm);
  }
  /* --- Map Embed --- */
  .map-embed-container {
    flex: 1.3; /* Slightly wider than the details card */
    min-height: 10rem; /* Minimum height for map on all screens */
    border-radius: var(--border-radius);
    overflow: hidden;
    width: 100%;
  }

  .map-embed-container iframe {
    width: 100%;
    height: 100%;
    display: block;
  }
</style>
