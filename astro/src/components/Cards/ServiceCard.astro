---
interface Props {
  icon?: string;
  title: string;
  description: string;
  cardBgColor: string;
  cardFontColor: string;
  cardBgHover: string;
  cardFontHover: string;
}
const {
  icon,
  title,
  description,
  cardBgColor,
  cardFontColor,
  cardBgHover,
  cardFontHover,
} = Astro.props;
---

<div class="service-card">
  <div class="card-icon" set:html={icon} />
  <div class="card-content">
    <div class="card-line"></div>
    <h3 class="heading-style-h5">{title}</h3>
    <p class="text-s">{description}</p>
  </div>
</div>

<style define:vars={{ cardBgColor, cardFontColor, cardBgHover, cardFontHover }}>
  .service-card {
    background-color: var(--cardBgColor);
    color: var(--cardFontColor);

    padding: var(--spacing-xl);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-small);
  }
  .service-card:hover {
    background-color: var(--cardBgHover) !important;
    color: var(--cardFontHover);
  }
  .service-card:hover .heading-style-h5,
  .service-card:hover .text-s {
    color: var(--cardFontHover);
  }
  .service-card:hover .card-line {
    background-color: var(--cardFontHover);
  }
  .service-card:hover .card-icon {
    color: var(--cardFontHover);
  }
  .card-icon {
    width: 3rem;
    height: 3rem;
    /* color: var(cardFontColor); */
  }
  .card-line {
    width: 4rem;
    height: 3px;

    margin-bottom: var(--spacing-sm);
    background-color: var(--cardFontColor);
  }
  .card-content {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
  }
  .heading-style-h5 {
    font-family: var(--font-primary);
    font-size: var(--font-size-h4);
    font-weight: var(--font-weight-bold);
  }
  .text-s {
    font-size: var(--font-size-sm);
    line-height: var(--line-height-body);
  }
</style>
