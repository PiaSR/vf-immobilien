/// <reference types="@sanity-codegen/types/extractor" />
export declare class SchemaParseError extends Error {
}
export interface SchemaNormalizerOptions {
    /**
     * The name that will be forwarded to the resulting output type
     */
    name: string;
    /**
     * The raw sanity schema to be normalized
     */
    types: unknown[];
    /**
     * Whether or not to include the original node sanity in the output. This will
     * make the `originalNode` property on a schema node be omitted. This is for
     * serialization purposes.
     */
    omitOriginalNode?: boolean;
}
/**
 * Takes in a raw sanity schema and returns a statically typed normalized
 * version. This function also validates the raw schema, throwing when errors
 * are found.
 *
 * @param types raw sanity schema in the form of a type array
 * @returns normalized sanity schema
 */
export declare function schemaNormalizer({ name, types, omitOriginalNode, }: SchemaNormalizerOptions): Sanity.SchemaDef.Schema;
//# sourceMappingURL=schema-normalizer.d.ts.map