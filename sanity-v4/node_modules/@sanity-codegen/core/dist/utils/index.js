"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "accessAttributeInStructure", {
  enumerable: true,
  get: function () {
    return _accessAttributeInStructure.accessAttributeInStructure;
  }
});
Object.defineProperty(exports, "addNull", {
  enumerable: true,
  get: function () {
    return _transforms.addNull;
  }
});
Object.defineProperty(exports, "addOptional", {
  enumerable: true,
  get: function () {
    return _transforms.addOptional;
  }
});
Object.defineProperty(exports, "addOptionalToProperties", {
  enumerable: true,
  get: function () {
    return _transforms.addOptionalToProperties;
  }
});
Object.defineProperty(exports, "boundedFind", {
  enumerable: true,
  get: function () {
    return _boundedFind.boundedFind;
  }
});
Object.defineProperty(exports, "createStructure", {
  enumerable: true,
  get: function () {
    return _createStructure.createStructure;
  }
});
Object.defineProperty(exports, "isStructureArray", {
  enumerable: true,
  get: function () {
    return _isStructure.isStructureArray;
  }
});
Object.defineProperty(exports, "isStructureBoolean", {
  enumerable: true,
  get: function () {
    return _isStructure.isStructureBoolean;
  }
});
Object.defineProperty(exports, "isStructureNull", {
  enumerable: true,
  get: function () {
    return _isStructure.isStructureNull;
  }
});
Object.defineProperty(exports, "isStructureNumber", {
  enumerable: true,
  get: function () {
    return _isStructure.isStructureNumber;
  }
});
Object.defineProperty(exports, "isStructureObject", {
  enumerable: true,
  get: function () {
    return _isStructure.isStructureObject;
  }
});
Object.defineProperty(exports, "isStructureOptional", {
  enumerable: true,
  get: function () {
    return _isStructure.isStructureOptional;
  }
});
Object.defineProperty(exports, "isStructureString", {
  enumerable: true,
  get: function () {
    return _isStructure.isStructureString;
  }
});
Object.defineProperty(exports, "narrowStructure", {
  enumerable: true,
  get: function () {
    return _narrowStructure.narrowStructure;
  }
});
Object.defineProperty(exports, "objectHash", {
  enumerable: true,
  get: function () {
    return _hash.objectHash;
  }
});
Object.defineProperty(exports, "reduceObjectStructures", {
  enumerable: true,
  get: function () {
    return _reduceObjectStructures.reduceObjectStructures;
  }
});
Object.defineProperty(exports, "removeOptional", {
  enumerable: true,
  get: function () {
    return _transforms.removeOptional;
  }
});
Object.defineProperty(exports, "resolveExpression", {
  enumerable: true,
  get: function () {
    return _resolveExpression.resolveExpression;
  }
});
Object.defineProperty(exports, "resolveIdentifier", {
  enumerable: true,
  get: function () {
    return _resolveIdentifier.resolveIdentifier;
  }
});
Object.defineProperty(exports, "simpleLogger", {
  enumerable: true,
  get: function () {
    return _simpleLogger.simpleLogger;
  }
});
Object.defineProperty(exports, "unorderedHash", {
  enumerable: true,
  get: function () {
    return _hash.unorderedHash;
  }
});
Object.defineProperty(exports, "unwrapArray", {
  enumerable: true,
  get: function () {
    return _transforms.unwrapArray;
  }
});
Object.defineProperty(exports, "unwrapReferences", {
  enumerable: true,
  get: function () {
    return _transforms.unwrapReferences;
  }
});
Object.defineProperty(exports, "wrapArray", {
  enumerable: true,
  get: function () {
    return _wrapArray.wrapArray;
  }
});
var _accessAttributeInStructure = require("./access-attribute-in-structure");
var _boundedFind = require("./bounded-find");
var _createStructure = require("./create-structure");
var _hash = require("./hash");
var _isStructure = require("./is-structure");
var _narrowStructure = require("./narrow-structure");
var _transforms = require("./transforms");
var _reduceObjectStructures = require("./reduce-object-structures");
var _resolveExpression = require("./resolve-expression");
var _resolveIdentifier = require("./resolve-identifier");
var _wrapArray = require("./wrap-array");
var _simpleLogger = require("./simple-logger");