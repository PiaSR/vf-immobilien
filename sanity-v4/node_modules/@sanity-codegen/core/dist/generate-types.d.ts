/// <reference types="@sanity-codegen/types/extractor" />
import { ResolveConfigOptions } from 'prettier';
import { PluckGroqFromFilesOptions } from './pluck-groq-from-files';
export interface GenerateTypesOptions extends PluckGroqFromFilesOptions {
    /**
     * This option is fed directly to prettier `resolveConfig`
     *
     * https://prettier.io/docs/en/api.html#prettierresolveconfigfilepath--options
     */
    prettierResolveConfigPath?: string;
    /**
     * This options is also fed directly to prettier `resolveConfig`
     *
     * https://prettier.io/docs/en/api.html#prettierresolveconfigfilepath--options
     */
    prettierResolveConfigOptions?: ResolveConfigOptions;
    /**
     * An array of extracted and normalized schema results from the
     * `normalizeSchema` function
     */
    normalizedSchemas: Sanity.SchemaDef.Schema[];
    /**
     * Ignores workspace schemas and excludes them from codegen. Useful if you have a
     * workspace that mirrors another one in schema (e.g. for staging env)
     */
    ignoreSchemas?: string[];
}
/**
 * Given a selection of filenames, this will pluck matching GROQ queries
 * (@see `pluckGroqFromFiles`) and then run them through a GROQ-to-TypeScript
 * transform.
 *
 * The result of each plucked query is put together into one source string.
 */
export declare function generateTypes({ prettierResolveConfigOptions, prettierResolveConfigPath, normalizedSchemas, ignoreSchemas, ...pluckOptions }: GenerateTypesOptions): Promise<string>;
//# sourceMappingURL=generate-types.d.ts.map